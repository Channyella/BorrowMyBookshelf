import type { TSESLint } from '@typescript-eslint/utils';
import { config } from './config-helper';
declare const _default: {
    config: typeof config;
    configs: {
        all: TSESLint.FlatConfig.ConfigArray;
        base: TSESLint.FlatConfig.Config;
        disableTypeChecked: TSESLint.FlatConfig.Config;
        eslintRecommended: TSESLint.FlatConfig.Config;
        recommended: TSESLint.FlatConfig.ConfigArray;
        recommendedTypeChecked: TSESLint.FlatConfig.ConfigArray;
        strict: TSESLint.FlatConfig.ConfigArray;
        strictTypeChecked: TSESLint.FlatConfig.ConfigArray;
        stylistic: TSESLint.FlatConfig.ConfigArray;
        stylisticTypeChecked: TSESLint.FlatConfig.ConfigArray;
    };
    parser: {
        meta?: Partial<TSESLint.Parser.ParserMeta> | undefined;
        parseForESLint(text: string, options?: unknown): {
            ast: unknown;
            services?: unknown;
            scopeManager?: unknown;
            visitorKeys?: unknown;
        };
    };
    plugin: TSESLint.FlatConfig.Plugin;
};
export = _default;
//# sourceMappingURL=index.d.ts.map